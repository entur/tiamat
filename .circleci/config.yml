version: 2
aliases:
  - &GCP-auth
    name: GCP Authenticate
    command: |
      echo 'export GCLOUD_SERVICE_KEY="$GCLOUD_SERVICE_KEY"' >> $BASH_ENV
      /tools/gcp_authenticate.sh
  - &docker-login
    name: Docker login
    command: |
      echo 'export GCLOUD_SERVICE_KEY="$GCLOUD_SERVICE_KEY"' >> $BASH_ENV
      /tools/docker_login.sh
  - &docker-build-and-push
    name: Docker build and push
    command: |
      IMAGE="eu.gcr.io/carbon-1287/${CIRCLE_PROJECT_REPONAME}"
      echo "Image: ${IMAGE}"
      docker build -t $IMAGE .
      docker tag $IMAGE "${IMAGE}":"0.0.2-SNAPSHOT"
      docker push $IMAGE
  - &post-hook
    name: Notify about build and docker image pushed
    command: |
      echo 'export CIRCLE_PROJECT_REPONAME="$CIRCLE_PROJECT_REPONAME"' >> $BASH_ENV
      echo 'export CIRCLE_SHA1="$CIRCLE_SHA1"' >> $BASH_ENV
      echo 'export BUILD_STATUS_API_KEY="$BUILD_STATUS_API_KEY"' >> $BASH_ENV
      /tools/build_notify.sh
jobs:
  build:
    docker:
      - image: eu.gcr.io/carbon-1287/circleci-toolbox-image-java11
        auth:
          username: _json_key
          password: $GCLOUD_SERVICE_KEY
    environment:
      MAVEN_OPTS: -Xmx3G
    steps:
      - checkout
      - restore_cache:
          key: dep-cache-{{ checksum "pom.xml" }}
      - run: mvn org.apache.maven.plugins:maven-dependency-plugin:3.1.0:go-offline -s /tools/m2/settings.xml
      - save_cache:
          paths:
            - ~/.m2
          key: dep-cache-{{ checksum "pom.xml" }}
      # Cannot use -o because of snapshot dependencies.
      - run: mvn install -s /tools/m2/settings.xml
      - run:
          name: Save test results
          command: |
            mkdir -p ~/junit/
            find . -type f -regex ".*/target/surefire-reports/.*xml" -exec cp {} ~/junit/ \;
          when: always
      - store_test_results:
          path: ~/junit
      - store_artifacts:
          path: ~/junit
      - persist_to_workspace:
          root: ~/project
          paths:
            - target
            - Dockerfile
            - .circleci
  deploy-docker:
    docker:
      - image: eu.gcr.io/carbon-1287/circleci-toolbox-image-java11
        auth:
          username: _json_key
          password: $GCLOUD_SERVICE_KEY
    environment:
      DEBIAN_FRONTEND: "noninteractive"
    steps:
      - attach_workspace:
          at: ~/project
      - setup_remote_docker:
          docker_layer_caching: true
      - run: *GCP-auth
      - run: *docker-login
      - run: *docker-build-and-push
      - run: *post-hook
workflows:
  version: 2
  build_test_deploy:
    jobs:
      - build:
          context: org-carbon
      - deploy-docker:
          context: org-carbon
          requires:
            - build
          filters:
            branches:
              only: master