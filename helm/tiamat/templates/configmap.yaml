apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Values.deployment.name }}-config
  namespace: {{ .Release.Namespace }}
  labels:
  {{- include "common.labels" . | indent 4 }}
data:
  application.properties: |-
    server.port={{ .Values.service.http.internalPort }}
    nearbyStopsWithSameTypeFinder.limits={railStation:'200',airport:'3000'}
    tariffzoneLookupService.resetReferences=true
    publicationDeliveryStreamingOutput.validateAgainstSchema=true
    publicationDeliveryUnmarshaller.validateAgainstSchema=true
    netex.import.enabled.types=MERGE
    changelog.publish.enabled=true
    netex.id.valid.prefix.list={TopographicPlace:{'KVE','WOF','OSM','ENT','LAN'},TariffZone:{'*'},FareZone:{'*'},GroupOfTariffZones:{'*'}}
    netex.profile.version=1.14:NO-NeTEx-stops:1.5

    # GCS properties
    blobstore.gcs.bucket.name={{.Values.configMap.gcsBucketName}}
    blobstore.gcs.blob.path=export
    blobstore.gcs.project.id={{.Values.configMap.blobstoreProjectId}}

    # Database properties
    spring.jpa.properties.jakarta.persistence.query.timeout=30000
    spring.jpa.properties.hibernate.cache.region.factory_class=com.hazelcast.hibernate.HazelcastCacheRegionFactory
    spring.jpa.properties.hibernate.cache.use_second_level_cache=true
    spring.jpa.properties.hibernate.cache.use_minimal_puts=true
    spring.jpa.properties.hibernate.cache.use_query_cache=true
    spring.jpa.hibernate.ddl-auto=none
    spring.jpa.hibernate.use-new-id-generator-mappings=true
    spring.jpa.open-in-view=false
    spring.jpa.database=POSTGRESQL
    spring.jpa.show-sql=false
    spring.database.driverClassName=org.postgresql.Driver
    spring.datasource.hikari.maximumPoolSize=30
    spring.datasource.url=jdbc:postgresql://localhost:5432/{{ .Values.deployment.name }}
    spring.datasource.username=tiamat
    spring.datasource.platform=postgres
    graphql.query.max.depth =100


    #flyway
    spring.flyway.table =schema_version


    # Hazelcast properties
    tiamat.hazelcast.cluster.name=tiamat
    tiamat.hazelcast.service-name=tiamat
    tiamat.hazelcast.service-port=5701
    tiamat.hazelcast.kubernetes.enabled=false



    # Security config with auth0
    authorization.enabled=true
    tiamat.security.role.assignment.extractor={{ .Values.roleAssignmentExtractor }}
    tiamat.user.permission.rest.service.url={{ .Values.organisation.service }}/services/organisations/users


    # OAuth2 Resource Server for Entur Partner tenant
    tiamat.oauth2.resourceserver.auth0.entur.partner.jwt.issuer-uri={{ .Values.auth0.entur.partner.url }}
    tiamat.oauth2.resourceserver.auth0.entur.partner.jwt.audience={{ .Values.auth0.ror.audience }}

    # OAuth2 Resource Server for Entur internal tenant
    tiamat.oauth2.resourceserver.auth0.entur.internal.jwt.issuer-uri={{ .Values.auth0.entur.internal.url }}
    tiamat.oauth2.resourceserver.auth0.entur.internal.jwt.audience={{ .Values.auth0.ror.audience }}

    # OAuth2 Resource Server for RoR tenant
    tiamat.oauth2.resourceserver.auth0.ror.jwt.issuer-uri={{ .Values.auth0.ror.url }}
    tiamat.oauth2.resourceserver.auth0.ror.jwt.audience={{ .Values.auth0.ror.audience }}
    tiamat.oauth2.resourceserver.auth0.ror.claim.namespace=https://ror.entur.io/

    # OAuth Entur Internal client
    spring.security.oauth2.client.registration.internal.authorization-grant-type=client_credentials
    spring.security.oauth2.client.registration.internal.client-id={{ .Values.auth0.client.id }}
    spring.security.oauth2.client.provider.internal.token-uri={{ .Values.auth0.client.url }}
    tiamat.oauth2.client.audience={{ .Values.auth0.client.audience }}

    # Logging Properties
    logging.level.org.rutebanken.tiamat=INFO
    logging.level.org.rutebanken.tiamat.repository=DEBUG
    logging.level.org.rutebanken.tiamat.repository.reference=WARN
    logging.level.org.rutebanken.tiamat.importer.finder=INFO
    logging.level.org.rutebanken.tiamat.dtoassembling.disassembler.StopPlaceSearchDisassembler=WARN
    logging.level.org.rutebanken.tiamat.rest.netex.publicationdelivery.PublicationDeliveryUnmarshaller=INFO
    logging.level.org.rutebanken.tiamat.rest.netex.publicationdelivery=INFO
    logging.level.org.rutebanken.tiamat.rest.netex.publicationdelivery.PublicationDeliveryStreamingOutput=INFO
    logging.level.org.springframework.orm.hibernate4.support=WARN
    logging.level.org.hibernate.SQL=WARN
    logging.level.org.hibernate.tool.hbm2ddl=INFO
    logging.level.org.hibernate.type=WARN
    logging.level.org.hibernate.id.enhanced=INFO
    logging.level.io.micrometer.prometheus=WARN
    logging.level.org.geotools=WARN
    logging.level.hsqldb.db=WARN

    #Profile
    spring.profiles.active=gcs-blobstore,google-pubsub

    # pubsub
    spring.cloud.gcp.project-id={{ .Values.configMap.pubsubProjectId }}
    changelog.topic.name={{ .Values.configMap.pubsbuTopicName }}

    # Compression
    server.compression.enabled=true
    server.compression.mime-types=application/json,application/xml,text/html,text/xml,text/plain
